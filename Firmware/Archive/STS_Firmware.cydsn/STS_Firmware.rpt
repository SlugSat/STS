Loading plugins phase: Elapsed time ==> 0s.180ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\STS_Firmware.cyprj -d CY8C5888LTI-LP097 -s C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_10 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.316ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.124ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  STS_Firmware.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\STS_Firmware.cyprj -dcpsoc3 STS_Firmware.v -verilog
======================================================================

======================================================================
Compiling:  STS_Firmware.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\STS_Firmware.cyprj -dcpsoc3 STS_Firmware.v -verilog
======================================================================

======================================================================
Compiling:  STS_Firmware.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\STS_Firmware.cyprj -dcpsoc3 -verilog STS_Firmware.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Thu May 07 16:05:38 2020


======================================================================
Compiling:  STS_Firmware.v
Program  :   vpp
Options  :    -yv2 -q10 STS_Firmware.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Thu May 07 16:05:38 2020

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\and_v1_0\and_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'STS_Firmware.ctl'.
STS_Firmware.v (line 790, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
STS_Firmware.v (line 1904, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  STS_Firmware.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\STS_Firmware.cyprj -dcpsoc3 -verilog STS_Firmware.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Thu May 07 16:05:39 2020

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\codegentemp\STS_Firmware.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\codegentemp\STS_Firmware.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\and_v1_0\and_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.

tovif:  No errors.


======================================================================
Compiling:  STS_Firmware.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\STS_Firmware.cyprj -dcpsoc3 -verilog STS_Firmware.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Thu May 07 16:05:39 2020

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\codegentemp\STS_Firmware.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\codegentemp\STS_Firmware.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Counter_v3_0\B_Counter_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bQuadDec_v3_0\bQuadDec_v3_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\and_v1_0\and_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\ACC_ADC_A:SAR:Net_221\
	\ACC_ADC_A:SAR:Net_383\
	\ACC_ADC_A:bSAR_SEQ:sw_soc\
	\ACC_ADC_A:soc_out\
	\ACC_ADC_A:Net_3905\
	\ACC_ADC_A:Net_3867\
	\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:albi_2\
	\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:albi_1\
	\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:albi_0\
	\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ACC_ADC_A:MODULE_1:g1:a0:xneq\
	\ACC_ADC_A:MODULE_1:g1:a0:xlt\
	\ACC_ADC_A:MODULE_1:g1:a0:xlte\
	\ACC_ADC_A:MODULE_1:g1:a0:xgt\
	\ACC_ADC_A:MODULE_1:g1:a0:xgte\
	\ACC_ADC_A:MODULE_1:lt\
	\ACC_ADC_A:MODULE_1:gt\
	\ACC_ADC_A:MODULE_1:gte\
	\ACC_ADC_A:MODULE_1:lte\
	\ACC_ADC_A:MODULE_1:neq\
	\ARM_ANGLE_ENCODER:Net_1129\
	\ARM_ANGLE_ENCODER:Cnt16:Net_82\
	\ARM_ANGLE_ENCODER:Cnt16:Net_95\
	\ARM_ANGLE_ENCODER:Cnt16:Net_91\
	\ARM_ANGLE_ENCODER:Cnt16:Net_102\
	\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:ctrl_cmod_2\
	\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:ctrl_cmod_1\
	\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:ctrl_cmod_0\
	Net_245
	Net_247
	Net_248
	Net_249
	Net_250
	\ACC_B_ADC:SAR:Net_221\
	\ACC_B_ADC:SAR:Net_383\
	\ACC_B_ADC:bSAR_SEQ:sw_soc\
	\ACC_B_ADC:soc_out\
	\ACC_B_ADC:Net_3905\
	\ACC_B_ADC:Net_3867\
	\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:albi_2\
	\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:agbi_2\
	\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:albi_1\
	\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:agbi_1\
	\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:albi_0\
	\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:agbi_0\
	\ACC_B_ADC:MODULE_2:g1:a0:xneq\
	\ACC_B_ADC:MODULE_2:g1:a0:xlt\
	\ACC_B_ADC:MODULE_2:g1:a0:xlte\
	\ACC_B_ADC:MODULE_2:g1:a0:xgt\
	\ACC_B_ADC:MODULE_2:g1:a0:xgte\
	\ACC_B_ADC:MODULE_2:lt\
	\ACC_B_ADC:MODULE_2:gt\
	\ACC_B_ADC:MODULE_2:gte\
	\ACC_B_ADC:MODULE_2:lte\
	\ACC_B_ADC:MODULE_2:neq\


Deleted 57 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \ACC_ADC_A:SAR:vp_ctl_2\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:SAR:vn_ctl_1\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:SAR:vn_ctl_3\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:SAR:vp_ctl_1\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:SAR:vp_ctl_3\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:SAR:vn_ctl_0\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:SAR:vn_ctl_2\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:SAR:soc\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing zero to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:SAR:tmpOE__Bypass_net_0\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing one to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \ACC_ADC_A:bSAR_SEQ:status_7\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:bSAR_SEQ:status_6\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:bSAR_SEQ:status_5\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:bSAR_SEQ:status_4\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:bSAR_SEQ:status_3\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:bSAR_SEQ:status_2\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_ADC_A:bSAR_SEQ:status_1\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing Net_261 to \ACC_ADC_A:bSAR_SEQ:status_0\
Aliasing \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:aeqb_0\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__ACC_A_X_PIN_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__ACC_A_Y_PIN_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__ACC_A_Z_PIN_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__TARE_BTN_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \LCD:tmpOE__LCDPort_net_6\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \LCD:tmpOE__LCDPort_net_5\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \LCD:tmpOE__LCDPort_net_4\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \LCD:tmpOE__LCDPort_net_3\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \LCD:tmpOE__LCDPort_net_2\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \LCD:tmpOE__LCDPort_net_1\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \LCD:tmpOE__LCDPort_net_0\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__SD_EJECT_BTN_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:ctrl_capmode_1\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:ctrl_capmode_0\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:capt_rising\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:underflow\ to \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\
Aliasing \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:tc_i\ to \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload_tc\
Aliasing \ARM_ANGLE_ENCODER:bQuadDec:status_4\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ARM_ANGLE_ENCODER:bQuadDec:status_5\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ARM_ANGLE_ENCODER:bQuadDec:status_6\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ARM_ANGLE_ENCODER:Net_1229\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__ENC_A_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__ENC_B_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \RGB_LED:clk\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \RGB_LED:rst\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing tmpOE__RED_LED_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__GREEN_LED_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__BLUE_LED_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__BUZZER_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \ACC_B_ADC:AMuxHw_2_Decoder_enable\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \ACC_B_ADC:SAR:vp_ctl_0\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:SAR:vp_ctl_2\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:SAR:vn_ctl_1\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:SAR:vn_ctl_3\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:SAR:vp_ctl_1\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:SAR:vp_ctl_3\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:SAR:vn_ctl_0\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:SAR:vn_ctl_2\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:SAR:soc\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:SAR:tmpOE__Bypass_net_0\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \ACC_B_ADC:bSAR_SEQ:status_7\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:bSAR_SEQ:status_6\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:bSAR_SEQ:status_5\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:bSAR_SEQ:status_4\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:bSAR_SEQ:status_3\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:bSAR_SEQ:status_2\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ACC_B_ADC:bSAR_SEQ:status_1\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing Net_364 to \ACC_B_ADC:bSAR_SEQ:status_0\
Aliasing \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:aeqb_0\ to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__ACC_B_X_PIN_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__ACC_B_Y_PIN_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing tmpOE__ACC_B_Z_PIN_net_0 to \ACC_ADC_A:AMuxHw_2_Decoder_enable\
Aliasing \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\\D\ to \ACC_ADC_A:MODIN1_5\
Aliasing \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\\D\ to \ACC_ADC_A:MODIN1_4\
Aliasing \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\\D\ to \ACC_ADC_A:MODIN1_3\
Aliasing \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\\D\ to \ACC_ADC_A:MODIN1_2\
Aliasing \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\\D\ to \ACC_ADC_A:MODIN1_1\
Aliasing \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\\D\ to \ACC_ADC_A:MODIN1_0\
Aliasing \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCapture\\D\ to \ACC_ADC_A:SAR:vp_ctl_0\
Aliasing \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_reg_i\\D\ to \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\\D\
Aliasing \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\\D\ to \ACC_B_ADC:MODIN3_5\
Aliasing \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\\D\ to \ACC_B_ADC:MODIN3_4\
Aliasing \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\\D\ to \ACC_B_ADC:MODIN3_3\
Aliasing \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\\D\ to \ACC_B_ADC:MODIN3_2\
Aliasing \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\\D\ to \ACC_B_ADC:MODIN3_1\
Aliasing \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\\D\ to \ACC_B_ADC:MODIN3_0\
Removing Lhs of wire \ACC_ADC_A:cmp_vv_vv_MODGEN_1\[2] = \ACC_ADC_A:MODULE_1:g1:a0:xeq\[346]
Removing Rhs of wire \ACC_ADC_A:clock\[3] = \ACC_ADC_A:Net_3874\[246]
Removing Rhs of wire \ACC_ADC_A:ch_addr_5\[5] = \ACC_ADC_A:bSAR_SEQ:count_5\[213]
Removing Rhs of wire \ACC_ADC_A:ch_addr_4\[7] = \ACC_ADC_A:bSAR_SEQ:count_4\[214]
Removing Rhs of wire \ACC_ADC_A:ch_addr_3\[9] = \ACC_ADC_A:bSAR_SEQ:count_3\[215]
Removing Rhs of wire \ACC_ADC_A:ch_addr_2\[11] = \ACC_ADC_A:bSAR_SEQ:count_2\[216]
Removing Rhs of wire \ACC_ADC_A:ch_addr_1\[13] = \ACC_ADC_A:bSAR_SEQ:count_1\[217]
Removing Rhs of wire \ACC_ADC_A:ch_addr_0\[15] = \ACC_ADC_A:bSAR_SEQ:count_0\[218]
Removing Lhs of wire \ACC_ADC_A:SAR:vp_ctl_2\[150] = \ACC_ADC_A:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ACC_ADC_A:SAR:vn_ctl_1\[151] = \ACC_ADC_A:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ACC_ADC_A:SAR:vn_ctl_3\[152] = \ACC_ADC_A:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ACC_ADC_A:SAR:vp_ctl_1\[153] = \ACC_ADC_A:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ACC_ADC_A:SAR:vp_ctl_3\[154] = \ACC_ADC_A:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ACC_ADC_A:SAR:vn_ctl_0\[155] = \ACC_ADC_A:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ACC_ADC_A:SAR:vn_ctl_2\[156] = \ACC_ADC_A:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ACC_ADC_A:SAR:Net_188\[157] = \ACC_ADC_A:clock\[3]
Removing Lhs of wire \ACC_ADC_A:SAR:soc\[163] = \ACC_ADC_A:SAR:vp_ctl_0\[149]
Removing Rhs of wire zero[164] = \ACC_ADC_A:SAR:vp_ctl_0\[149]
Removing Lhs of wire \ACC_ADC_A:SAR:tmpOE__Bypass_net_0\[183] = \ACC_ADC_A:AMuxHw_2_Decoder_enable\[0]
Removing Rhs of wire one[187] = \ACC_ADC_A:AMuxHw_2_Decoder_enable\[0]
Removing Rhs of wire \ACC_ADC_A:bSAR_SEQ:enable\[203] = \ACC_ADC_A:bSAR_SEQ:control_0\[204]
Removing Rhs of wire \ACC_ADC_A:bSAR_SEQ:load_period\[205] = \ACC_ADC_A:bSAR_SEQ:control_1\[206]
Removing Lhs of wire \ACC_ADC_A:bSAR_SEQ:status_7\[219] = zero[164]
Removing Lhs of wire \ACC_ADC_A:bSAR_SEQ:status_6\[220] = zero[164]
Removing Lhs of wire \ACC_ADC_A:bSAR_SEQ:status_5\[221] = zero[164]
Removing Lhs of wire \ACC_ADC_A:bSAR_SEQ:status_4\[222] = zero[164]
Removing Lhs of wire \ACC_ADC_A:bSAR_SEQ:status_3\[223] = zero[164]
Removing Lhs of wire \ACC_ADC_A:bSAR_SEQ:status_2\[224] = zero[164]
Removing Lhs of wire \ACC_ADC_A:bSAR_SEQ:status_1\[225] = zero[164]
Removing Rhs of wire \ACC_ADC_A:bSAR_SEQ:status_0\[226] = \ACC_ADC_A:bSAR_SEQ:nrq_edge_detect_reg\[227]
Removing Rhs of wire Net_261[234] = \ACC_ADC_A:bSAR_SEQ:status_0\[226]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newa_5\[257] = \ACC_ADC_A:MODIN1_5\[258]
Removing Lhs of wire \ACC_ADC_A:MODIN1_5\[258] = \ACC_ADC_A:ch_addr_5\[5]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newa_4\[259] = \ACC_ADC_A:MODIN1_4\[260]
Removing Lhs of wire \ACC_ADC_A:MODIN1_4\[260] = \ACC_ADC_A:ch_addr_4\[7]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newa_3\[261] = \ACC_ADC_A:MODIN1_3\[262]
Removing Lhs of wire \ACC_ADC_A:MODIN1_3\[262] = \ACC_ADC_A:ch_addr_3\[9]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newa_2\[263] = \ACC_ADC_A:MODIN1_2\[264]
Removing Lhs of wire \ACC_ADC_A:MODIN1_2\[264] = \ACC_ADC_A:ch_addr_2\[11]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newa_1\[265] = \ACC_ADC_A:MODIN1_1\[266]
Removing Lhs of wire \ACC_ADC_A:MODIN1_1\[266] = \ACC_ADC_A:ch_addr_1\[13]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newa_0\[267] = \ACC_ADC_A:MODIN1_0\[268]
Removing Lhs of wire \ACC_ADC_A:MODIN1_0\[268] = \ACC_ADC_A:ch_addr_0\[15]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newb_5\[269] = \ACC_ADC_A:MODIN2_5\[270]
Removing Lhs of wire \ACC_ADC_A:MODIN2_5\[270] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newb_4\[271] = \ACC_ADC_A:MODIN2_4\[272]
Removing Lhs of wire \ACC_ADC_A:MODIN2_4\[272] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newb_3\[273] = \ACC_ADC_A:MODIN2_3\[274]
Removing Lhs of wire \ACC_ADC_A:MODIN2_3\[274] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newb_2\[275] = \ACC_ADC_A:MODIN2_2\[276]
Removing Lhs of wire \ACC_ADC_A:MODIN2_2\[276] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newb_1\[277] = \ACC_ADC_A:MODIN2_1\[278]
Removing Lhs of wire \ACC_ADC_A:MODIN2_1\[278] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:newb_0\[279] = \ACC_ADC_A:MODIN2_0\[280]
Removing Lhs of wire \ACC_ADC_A:MODIN2_0\[280] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:dataa_5\[281] = \ACC_ADC_A:ch_addr_5\[5]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:dataa_4\[282] = \ACC_ADC_A:ch_addr_4\[7]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:dataa_3\[283] = \ACC_ADC_A:ch_addr_3\[9]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:dataa_2\[284] = \ACC_ADC_A:ch_addr_2\[11]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:dataa_1\[285] = \ACC_ADC_A:ch_addr_1\[13]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:dataa_0\[286] = \ACC_ADC_A:ch_addr_0\[15]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:datab_5\[287] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:datab_4\[288] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:datab_3\[289] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:datab_2\[290] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:datab_1\[291] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:datab_0\[292] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:a_5\[293] = \ACC_ADC_A:ch_addr_5\[5]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:a_4\[294] = \ACC_ADC_A:ch_addr_4\[7]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:a_3\[295] = \ACC_ADC_A:ch_addr_3\[9]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:a_2\[296] = \ACC_ADC_A:ch_addr_2\[11]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:a_1\[297] = \ACC_ADC_A:ch_addr_1\[13]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:a_0\[298] = \ACC_ADC_A:ch_addr_0\[15]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:b_5\[299] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\[4]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:b_4\[300] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\[6]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:b_3\[301] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\[8]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:b_2\[302] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\[10]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:b_1\[303] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\[12]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:b_0\[304] = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\[14]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:aeqb_0\[311] = one[187]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_0\[312] = \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_0\[310]
Removing Lhs of wire \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eqi_0\[318] = \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_5\[317]
Removing Rhs of wire \ACC_ADC_A:MODULE_1:g1:a0:xeq\[346] = \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:aeqb_1\[319]
Removing Lhs of wire tmpOE__ACC_A_X_PIN_net_0[358] = one[187]
Removing Lhs of wire tmpOE__ACC_A_Y_PIN_net_0[364] = one[187]
Removing Lhs of wire tmpOE__ACC_A_Z_PIN_net_0[370] = one[187]
Removing Lhs of wire tmpOE__TARE_BTN_net_0[378] = one[187]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_6\[384] = one[187]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_5\[385] = one[187]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_4\[386] = one[187]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_3\[387] = one[187]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_2\[388] = one[187]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_1\[389] = one[187]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_0\[390] = one[187]
Removing Lhs of wire tmpOE__SD_EJECT_BTN_net_0[408] = one[187]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Net_1275\[415] = \ARM_ANGLE_ENCODER:Cnt16:Net_49\[416]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Net_1275\[415] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:tc_reg_i\[473]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:Net_89\[418] = \ARM_ANGLE_ENCODER:Net_1251\[419]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:ctrl_capmode_1\[429] = zero[164]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:ctrl_capmode_0\[430] = zero[164]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:ctrl_enable\[442] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_7\[434]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:capt_rising\[444] = zero[164]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:capt_falling\[445] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCapture\[443]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Net_1260\[449] = \ARM_ANGLE_ENCODER:bQuadDec:state_2\[587]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:final_enable\[451] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_7\[434]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:counter_enable\[452] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_7\[434]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_0\[453] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_status\[454]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\[455] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:per_zero\[456]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_2\[457] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow_status\[458]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_3\[459] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:underflow_status\[460]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_4\[461] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:hwCapture\[447]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_5\[462] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:fifo_full\[463]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_6\[464] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:fifo_nempty\[465]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\[467] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:per_FF\[468]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:underflow\[469] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\[455]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:tc_i\[472] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload_tc\[450]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_i\[474] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_equal\[475]
Removing Rhs of wire \ARM_ANGLE_ENCODER:Net_1264\[478] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_reg_i\[477]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:dp_dir\[482] = \ARM_ANGLE_ENCODER:Net_1251\[419]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cs_addr_2\[483] = \ARM_ANGLE_ENCODER:Net_1251\[419]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cs_addr_1\[484] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_enable\[481]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cs_addr_0\[485] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload\[448]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Net_1290\[562] = \ARM_ANGLE_ENCODER:Net_1275\[415]
Removing Lhs of wire \ARM_ANGLE_ENCODER:bQuadDec:index_filt\[585] = \ARM_ANGLE_ENCODER:Net_1232\[586]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Net_1232\[586] = one[187]
Removing Rhs of wire \ARM_ANGLE_ENCODER:bQuadDec:error\[588] = \ARM_ANGLE_ENCODER:bQuadDec:state_3\[589]
Removing Lhs of wire \ARM_ANGLE_ENCODER:bQuadDec:status_0\[592] = \ARM_ANGLE_ENCODER:Net_530\[593]
Removing Lhs of wire \ARM_ANGLE_ENCODER:bQuadDec:status_1\[594] = \ARM_ANGLE_ENCODER:Net_611\[595]
Removing Lhs of wire \ARM_ANGLE_ENCODER:bQuadDec:status_2\[596] = \ARM_ANGLE_ENCODER:Net_1260\[449]
Removing Lhs of wire \ARM_ANGLE_ENCODER:bQuadDec:status_3\[597] = \ARM_ANGLE_ENCODER:bQuadDec:error\[588]
Removing Lhs of wire \ARM_ANGLE_ENCODER:bQuadDec:status_4\[598] = zero[164]
Removing Lhs of wire \ARM_ANGLE_ENCODER:bQuadDec:status_5\[599] = zero[164]
Removing Lhs of wire \ARM_ANGLE_ENCODER:bQuadDec:status_6\[600] = zero[164]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Net_1229\[605] = one[187]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Net_1272\[606] = \ARM_ANGLE_ENCODER:Net_1264\[478]
Removing Lhs of wire tmpOE__ENC_A_net_0[609] = one[187]
Removing Lhs of wire tmpOE__ENC_B_net_0[614] = one[187]
Removing Lhs of wire \RGB_LED:clk\[619] = zero[164]
Removing Lhs of wire \RGB_LED:rst\[620] = zero[164]
Removing Rhs of wire Net_246[621] = \RGB_LED:control_out_0\[622]
Removing Rhs of wire Net_246[621] = \RGB_LED:control_0\[645]
Removing Rhs of wire Net_243[623] = \RGB_LED:control_out_1\[624]
Removing Rhs of wire Net_243[623] = \RGB_LED:control_1\[644]
Removing Rhs of wire Net_244[625] = \RGB_LED:control_out_2\[626]
Removing Rhs of wire Net_244[625] = \RGB_LED:control_2\[643]
Removing Lhs of wire tmpOE__RED_LED_net_0[647] = one[187]
Removing Lhs of wire tmpOE__GREEN_LED_net_0[653] = one[187]
Removing Lhs of wire tmpOE__BLUE_LED_net_0[659] = one[187]
Removing Lhs of wire tmpOE__BUZZER_net_0[665] = one[187]
Removing Lhs of wire \ACC_B_ADC:AMuxHw_2_Decoder_enable\[670] = one[187]
Removing Lhs of wire \ACC_B_ADC:cmp_vv_vv_MODGEN_2\[672] = \ACC_B_ADC:MODULE_2:g1:a0:xeq\[1014]
Removing Rhs of wire \ACC_B_ADC:clock\[673] = \ACC_B_ADC:Net_3874\[914]
Removing Rhs of wire \ACC_B_ADC:ch_addr_5\[675] = \ACC_B_ADC:bSAR_SEQ:count_5\[881]
Removing Rhs of wire \ACC_B_ADC:ch_addr_4\[677] = \ACC_B_ADC:bSAR_SEQ:count_4\[882]
Removing Rhs of wire \ACC_B_ADC:ch_addr_3\[679] = \ACC_B_ADC:bSAR_SEQ:count_3\[883]
Removing Rhs of wire \ACC_B_ADC:ch_addr_2\[681] = \ACC_B_ADC:bSAR_SEQ:count_2\[884]
Removing Rhs of wire \ACC_B_ADC:ch_addr_1\[683] = \ACC_B_ADC:bSAR_SEQ:count_1\[885]
Removing Rhs of wire \ACC_B_ADC:ch_addr_0\[685] = \ACC_B_ADC:bSAR_SEQ:count_0\[886]
Removing Lhs of wire \ACC_B_ADC:SAR:vp_ctl_0\[819] = zero[164]
Removing Lhs of wire \ACC_B_ADC:SAR:vp_ctl_2\[820] = zero[164]
Removing Lhs of wire \ACC_B_ADC:SAR:vn_ctl_1\[821] = zero[164]
Removing Lhs of wire \ACC_B_ADC:SAR:vn_ctl_3\[822] = zero[164]
Removing Lhs of wire \ACC_B_ADC:SAR:vp_ctl_1\[823] = zero[164]
Removing Lhs of wire \ACC_B_ADC:SAR:vp_ctl_3\[824] = zero[164]
Removing Lhs of wire \ACC_B_ADC:SAR:vn_ctl_0\[825] = zero[164]
Removing Lhs of wire \ACC_B_ADC:SAR:vn_ctl_2\[826] = zero[164]
Removing Lhs of wire \ACC_B_ADC:SAR:Net_188\[827] = \ACC_B_ADC:clock\[673]
Removing Lhs of wire \ACC_B_ADC:SAR:soc\[833] = zero[164]
Removing Lhs of wire \ACC_B_ADC:SAR:tmpOE__Bypass_net_0\[852] = one[187]
Removing Rhs of wire \ACC_B_ADC:bSAR_SEQ:enable\[871] = \ACC_B_ADC:bSAR_SEQ:control_0\[872]
Removing Rhs of wire \ACC_B_ADC:bSAR_SEQ:load_period\[873] = \ACC_B_ADC:bSAR_SEQ:control_1\[874]
Removing Lhs of wire \ACC_B_ADC:bSAR_SEQ:status_7\[887] = zero[164]
Removing Lhs of wire \ACC_B_ADC:bSAR_SEQ:status_6\[888] = zero[164]
Removing Lhs of wire \ACC_B_ADC:bSAR_SEQ:status_5\[889] = zero[164]
Removing Lhs of wire \ACC_B_ADC:bSAR_SEQ:status_4\[890] = zero[164]
Removing Lhs of wire \ACC_B_ADC:bSAR_SEQ:status_3\[891] = zero[164]
Removing Lhs of wire \ACC_B_ADC:bSAR_SEQ:status_2\[892] = zero[164]
Removing Lhs of wire \ACC_B_ADC:bSAR_SEQ:status_1\[893] = zero[164]
Removing Rhs of wire \ACC_B_ADC:bSAR_SEQ:status_0\[894] = \ACC_B_ADC:bSAR_SEQ:nrq_edge_detect_reg\[895]
Removing Rhs of wire Net_364[902] = \ACC_B_ADC:bSAR_SEQ:status_0\[894]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newa_5\[925] = \ACC_B_ADC:MODIN3_5\[926]
Removing Lhs of wire \ACC_B_ADC:MODIN3_5\[926] = \ACC_B_ADC:ch_addr_5\[675]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newa_4\[927] = \ACC_B_ADC:MODIN3_4\[928]
Removing Lhs of wire \ACC_B_ADC:MODIN3_4\[928] = \ACC_B_ADC:ch_addr_4\[677]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newa_3\[929] = \ACC_B_ADC:MODIN3_3\[930]
Removing Lhs of wire \ACC_B_ADC:MODIN3_3\[930] = \ACC_B_ADC:ch_addr_3\[679]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newa_2\[931] = \ACC_B_ADC:MODIN3_2\[932]
Removing Lhs of wire \ACC_B_ADC:MODIN3_2\[932] = \ACC_B_ADC:ch_addr_2\[681]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newa_1\[933] = \ACC_B_ADC:MODIN3_1\[934]
Removing Lhs of wire \ACC_B_ADC:MODIN3_1\[934] = \ACC_B_ADC:ch_addr_1\[683]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newa_0\[935] = \ACC_B_ADC:MODIN3_0\[936]
Removing Lhs of wire \ACC_B_ADC:MODIN3_0\[936] = \ACC_B_ADC:ch_addr_0\[685]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newb_5\[937] = \ACC_B_ADC:MODIN4_5\[938]
Removing Lhs of wire \ACC_B_ADC:MODIN4_5\[938] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\[674]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newb_4\[939] = \ACC_B_ADC:MODIN4_4\[940]
Removing Lhs of wire \ACC_B_ADC:MODIN4_4\[940] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\[676]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newb_3\[941] = \ACC_B_ADC:MODIN4_3\[942]
Removing Lhs of wire \ACC_B_ADC:MODIN4_3\[942] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\[678]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newb_2\[943] = \ACC_B_ADC:MODIN4_2\[944]
Removing Lhs of wire \ACC_B_ADC:MODIN4_2\[944] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\[680]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newb_1\[945] = \ACC_B_ADC:MODIN4_1\[946]
Removing Lhs of wire \ACC_B_ADC:MODIN4_1\[946] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\[682]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:newb_0\[947] = \ACC_B_ADC:MODIN4_0\[948]
Removing Lhs of wire \ACC_B_ADC:MODIN4_0\[948] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\[684]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:dataa_5\[949] = \ACC_B_ADC:ch_addr_5\[675]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:dataa_4\[950] = \ACC_B_ADC:ch_addr_4\[677]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:dataa_3\[951] = \ACC_B_ADC:ch_addr_3\[679]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:dataa_2\[952] = \ACC_B_ADC:ch_addr_2\[681]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:dataa_1\[953] = \ACC_B_ADC:ch_addr_1\[683]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:dataa_0\[954] = \ACC_B_ADC:ch_addr_0\[685]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:datab_5\[955] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\[674]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:datab_4\[956] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\[676]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:datab_3\[957] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\[678]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:datab_2\[958] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\[680]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:datab_1\[959] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\[682]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:datab_0\[960] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\[684]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:a_5\[961] = \ACC_B_ADC:ch_addr_5\[675]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:a_4\[962] = \ACC_B_ADC:ch_addr_4\[677]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:a_3\[963] = \ACC_B_ADC:ch_addr_3\[679]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:a_2\[964] = \ACC_B_ADC:ch_addr_2\[681]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:a_1\[965] = \ACC_B_ADC:ch_addr_1\[683]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:a_0\[966] = \ACC_B_ADC:ch_addr_0\[685]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:b_5\[967] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\[674]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:b_4\[968] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\[676]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:b_3\[969] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\[678]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:b_2\[970] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\[680]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:b_1\[971] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\[682]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:b_0\[972] = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\[684]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:aeqb_0\[979] = one[187]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_0\[980] = \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_0\[978]
Removing Lhs of wire \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eqi_0\[986] = \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_5\[985]
Removing Rhs of wire \ACC_B_ADC:MODULE_2:g1:a0:xeq\[1014] = \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:aeqb_1\[987]
Removing Lhs of wire tmpOE__ACC_B_X_PIN_net_0[1026] = one[187]
Removing Lhs of wire tmpOE__ACC_B_Y_PIN_net_0[1032] = one[187]
Removing Lhs of wire tmpOE__ACC_B_Z_PIN_net_0[1038] = one[187]
Removing Lhs of wire \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\\D\[1045] = \ACC_ADC_A:ch_addr_5\[5]
Removing Lhs of wire \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\\D\[1046] = \ACC_ADC_A:ch_addr_4\[7]
Removing Lhs of wire \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\\D\[1047] = \ACC_ADC_A:ch_addr_3\[9]
Removing Lhs of wire \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\\D\[1048] = \ACC_ADC_A:ch_addr_2\[11]
Removing Lhs of wire \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\\D\[1049] = \ACC_ADC_A:ch_addr_1\[13]
Removing Lhs of wire \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\\D\[1050] = \ACC_ADC_A:ch_addr_0\[15]
Removing Lhs of wire \ACC_ADC_A:bSAR_SEQ:nrq_edge_detect_reg\\D\[1115] = \ACC_ADC_A:bSAR_SEQ:nrq_edge_detect\[233]
Removing Lhs of wire \ACC_ADC_A:bSAR_SEQ:nrq_reg\\D\[1117] = \ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\[230]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCapture\\D\[1119] = zero[164]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow_reg_i\\D\[1120] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\[467]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:underflow_reg_i\\D\[1121] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\[455]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:tc_reg_i\\D\[1122] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload_tc\[450]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\\D\[1123] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_i\[474]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_reg_i\\D\[1124] = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_i\[474]
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_stored_i\\D\[1125] = \ARM_ANGLE_ENCODER:Net_1203\[480]
Removing Lhs of wire \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\\D\[1133] = \ACC_B_ADC:ch_addr_5\[675]
Removing Lhs of wire \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\\D\[1134] = \ACC_B_ADC:ch_addr_4\[677]
Removing Lhs of wire \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\\D\[1135] = \ACC_B_ADC:ch_addr_3\[679]
Removing Lhs of wire \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\\D\[1136] = \ACC_B_ADC:ch_addr_2\[681]
Removing Lhs of wire \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\\D\[1137] = \ACC_B_ADC:ch_addr_1\[683]
Removing Lhs of wire \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\\D\[1138] = \ACC_B_ADC:ch_addr_0\[685]
Removing Lhs of wire \ACC_B_ADC:bSAR_SEQ:nrq_edge_detect_reg\\D\[1203] = \ACC_B_ADC:bSAR_SEQ:nrq_edge_detect\[901]
Removing Lhs of wire \ACC_B_ADC:bSAR_SEQ:nrq_reg\\D\[1205] = \ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\[898]

------------------------------------------------------
Aliased 0 equations, 258 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\));

Note:  Expanding virtual equation for '\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:capt_either_edge\' (cost = 0):
\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:capt_either_edge\ <= (\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCapture\);

Note:  Expanding virtual equation for '\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload_tc\' (cost = 2):
\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload_tc\ <= (\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\
	OR \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\);

Note:  Expanding virtual equation for '\ARM_ANGLE_ENCODER:bQuadDec:A_j\' (cost = 1):
\ARM_ANGLE_ENCODER:bQuadDec:A_j\ <= ((\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\ and \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\ and \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_2\));

Note:  Expanding virtual equation for '\ARM_ANGLE_ENCODER:bQuadDec:A_k\' (cost = 3):
\ARM_ANGLE_ENCODER:bQuadDec:A_k\ <= ((not \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\ and not \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\ and not \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_2\));

Note:  Expanding virtual equation for '\ARM_ANGLE_ENCODER:bQuadDec:B_j\' (cost = 1):
\ARM_ANGLE_ENCODER:bQuadDec:B_j\ <= ((\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\ and \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\ and \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_2\));

Note:  Expanding virtual equation for '\ARM_ANGLE_ENCODER:bQuadDec:B_k\' (cost = 3):
\ARM_ANGLE_ENCODER:bQuadDec:B_k\ <= ((not \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\ and not \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\ and not \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_2\));

Note:  Expanding virtual equation for '\ARM_ANGLE_ENCODER:Net_1151\' (cost = 0):
\ARM_ANGLE_ENCODER:Net_1151\ <= (not \ARM_ANGLE_ENCODER:Net_1251\);

Note:  Expanding virtual equation for '\ARM_ANGLE_ENCODER:Net_1287\' (cost = 0):
\ARM_ANGLE_ENCODER:Net_1287\ <= (not \ARM_ANGLE_ENCODER:Net_1264\);

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_5\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_4\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_3\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_2\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_1\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:xnor_array_0\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_1\' (cost = 8):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_1\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_2\' (cost = 16):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_2\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_3\' (cost = 32):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_3\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_4\' (cost = 64):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_4\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_5\' (cost = 64):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:eq_5\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lt_3\' (cost = 2):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lt_3\ <= ((not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gt_3\' (cost = 2):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gt_3\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lt_4\' (cost = 6):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lt_4\ <= ((not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gt_4\' (cost = 6):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gt_4\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lt_0\' (cost = 2):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lt_0\ <= ((not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gt_0\' (cost = 2):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gt_0\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lt_1\' (cost = 6):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lt_1\ <= ((not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gt_1\' (cost = 6):
\ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gt_1\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\ACC_ADC_A:MODULE_1:g1:a0:xeq\' (cost = 64):
\ACC_ADC_A:MODULE_1:g1:a0:xeq\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\));

Note:  Expanding virtual equation for '\ARM_ANGLE_ENCODER:Net_1248\' (cost = 2):
\ARM_ANGLE_ENCODER:Net_1248\ <= ((not \ARM_ANGLE_ENCODER:Net_1264\ and \ARM_ANGLE_ENCODER:Net_1275\));

Note:  Expanding virtual equation for '\ACC_B_ADC:MODULE_2:g1:a0:xeq\' (cost = 64):
\ACC_B_ADC:MODULE_2:g1:a0:xeq\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Virtual signal \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ACC_ADC_A:AMuxHw_2_Decoder_is_active\ <= ((not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and not \ACC_ADC_A:ch_addr_0\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and not \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and not \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and not \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and not \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (not \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and not \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\)
	OR (\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ and \ACC_ADC_A:ch_addr_5\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ and \ACC_ADC_A:ch_addr_4\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ and \ACC_ADC_A:ch_addr_3\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ and \ACC_ADC_A:ch_addr_2\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ and \ACC_ADC_A:ch_addr_1\ and \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ and \ACC_ADC_A:ch_addr_0\));

Note:  Virtual signal \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ACC_B_ADC:AMuxHw_2_Decoder_is_active\ <= ((not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and not \ACC_B_ADC:ch_addr_0\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and not \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and not \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and not \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and not \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (not \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and not \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\)
	OR (\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ and \ACC_B_ADC:ch_addr_5\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ and \ACC_B_ADC:ch_addr_4\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ and \ACC_B_ADC:ch_addr_3\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ and \ACC_B_ADC:ch_addr_2\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ and \ACC_B_ADC:ch_addr_1\ and \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ and \ACC_B_ADC:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 51 signals.
	Turned 2 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:hwCapture\ to zero
Removing Lhs of wire \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:hwCapture\[447] = zero[164]

------------------------------------------------------
Aliased 0 equations, 1 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya "-.fftprj=C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\STS_Firmware.cyprj" -dcpsoc3 STS_Firmware.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 2s.157ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.2.0.641, Family: PSoC3, Started at: Thursday, 07 May 2020 16:05:40
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Caleb Cotter\Documents\GitHub\STS\Firmware\STS_Firmware.cydsn\STS_Firmware.cyprj -d CY8C5888LTI-LP097 STS_Firmware.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.096ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ACC_ADC_A:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lti_1\ kept \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lt_5\
    Removed wire end \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gti_1\ kept \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gt_5\
    Removed wire end \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lti_0\ kept \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:lt_2\
    Removed wire end \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gti_0\ kept \ACC_B_ADC:MODULE_2:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCapture\ from registered to combinatorial
Assigning clock ACC_ADC_A_BusClock to clock BUS_CLK because it is a pass-through
Assigning clock ACC_B_ADC_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'ACC_B_ADC_IntClock'. Fanout=73, Signal=\ACC_B_ADC:clock\
    Digital Clock 1: Automatic-assigning  clock 'ACC_ADC_A_IntClock'. Fanout=73, Signal=\ACC_ADC_A:clock\
    Digital Clock 2: Automatic-assigning  clock 'ENC_CLK'. Fanout=3, Signal=Net_355
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \ACC_ADC_A:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ACC_ADC_A_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ACC_ADC_A:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ACC_ADC_A_IntClock, EnableOut: \ACC_ADC_A:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ACC_ADC_A:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ACC_ADC_A_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ACC_ADC_A_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: ENC_CLK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ENC_CLK, EnableOut: Constant 1
    UDB Clk/Enable \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sCTRLReg:cy_psoc3_udb_Ctl_Clk_Sync\: with output requested to be synchronous
        ClockIn: ENC_CLK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ENC_CLK, EnableOut: Constant 1
    UDB Clk/Enable \ARM_ANGLE_ENCODER:bQuadDec:CtrlClkEn\: with output requested to be synchronous
        ClockIn: ENC_CLK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ENC_CLK, EnableOut: Constant 1
    UDB Clk/Enable \ACC_B_ADC:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ACC_B_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ACC_B_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ACC_B_ADC_IntClock, EnableOut: \ACC_B_ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ACC_B_ADC:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ACC_B_ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ACC_B_ADC_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 10 pin(s) will be assigned a location by the fitter: \ACC_ADC_A:SAR:Bypass(0)\, \ACC_B_ADC:SAR:Bypass(0)\, BLUE_LED(0), BUZZER(0), ENC_A(0), ENC_B(0), GREEN_LED(0), RED_LED(0), SD_EJECT_BTN(0), TARE_BTN(0)


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \ARM_ANGLE_ENCODER:Net_1264\, Duplicate of \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\ 
    MacroCell: Name=\ARM_ANGLE_ENCODER:Net_1264\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_i\
        );
        Output = \ARM_ANGLE_ENCODER:Net_1264\ (fanout=2)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = \ACC_ADC_A:SAR:Bypass(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \ACC_ADC_A:SAR:Bypass(0)\__PA ,
            analog_term => \ACC_ADC_A:SAR:Net_210\ ,
            pad => \ACC_ADC_A:SAR:Bypass(0)_PAD\ );

    Pin : Name = ACC_A_X_PIN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ACC_A_X_PIN(0)__PA ,
            analog_term => Net_5 ,
            pad => ACC_A_X_PIN(0)_PAD ,
            pin_input => \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = ACC_A_Y_PIN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ACC_A_Y_PIN(0)__PA ,
            analog_term => Net_6 ,
            pad => ACC_A_Y_PIN(0)_PAD ,
            pin_input => \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = ACC_A_Z_PIN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ACC_A_Z_PIN(0)__PA ,
            analog_term => Net_8 ,
            pad => ACC_A_Z_PIN(0)_PAD ,
            pin_input => \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = TARE_BTN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => TARE_BTN(0)__PA ,
            pad => TARE_BTN(0)_PAD );

    Pin : Name = \LCD:LCDPort(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(0)\__PA ,
            pad => \LCD:LCDPort(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(1)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(1)\__PA ,
            pad => \LCD:LCDPort(1)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(2)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(2)\__PA ,
            pad => \LCD:LCDPort(2)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(3)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(3)\__PA ,
            pad => \LCD:LCDPort(3)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(4)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(4)\__PA ,
            pad => \LCD:LCDPort(4)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(5)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(5)\__PA ,
            pad => \LCD:LCDPort(5)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(6)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(6)\__PA ,
            pad => \LCD:LCDPort(6)_PAD\ );
        Properties:
        {
        }

    Pin : Name = SD_EJECT_BTN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => SD_EJECT_BTN(0)__PA ,
            pad => SD_EJECT_BTN(0)_PAD );

    Pin : Name = ENC_A(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ENC_A(0)__PA ,
            fb => Net_358 ,
            pad => ENC_A(0)_PAD );

    Pin : Name = ENC_B(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ENC_B(0)__PA ,
            fb => Net_357 ,
            pad => ENC_B(0)_PAD );

    Pin : Name = RED_LED(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RED_LED(0)__PA ,
            pin_input => Net_246 ,
            pad => RED_LED(0)_PAD );

    Pin : Name = GREEN_LED(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => GREEN_LED(0)__PA ,
            pin_input => Net_243 ,
            pad => GREEN_LED(0)_PAD );

    Pin : Name = BLUE_LED(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => BLUE_LED(0)__PA ,
            pin_input => Net_244 ,
            pad => BLUE_LED(0)_PAD );

    Pin : Name = BUZZER(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => BUZZER(0)__PA ,
            pad => BUZZER(0)_PAD );

    Pin : Name = \ACC_B_ADC:SAR:Bypass(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \ACC_B_ADC:SAR:Bypass(0)\__PA ,
            analog_term => \ACC_B_ADC:SAR:Net_210\ ,
            pad => \ACC_B_ADC:SAR:Bypass(0)_PAD\ );

    Pin : Name = ACC_B_X_PIN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ACC_B_X_PIN(0)__PA ,
            analog_term => Net_365 ,
            pad => ACC_B_X_PIN(0)_PAD ,
            pin_input => \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = ACC_B_Y_PIN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ACC_B_Y_PIN(0)__PA ,
            analog_term => Net_366 ,
            pad => ACC_B_Y_PIN(0)_PAD ,
            pin_input => \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = ACC_B_Z_PIN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ACC_B_Z_PIN(0)__PA ,
            analog_term => Net_368 ,
            pad => ACC_B_Z_PIN(0)_PAD ,
            pin_input => \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * !\ACC_B_ADC:ch_addr_5\
            + \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:ch_addr_4\
            + \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:ch_addr_3\
            + \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:ch_addr_2\
            + !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:ch_addr_1\
            + \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:ch_addr_1\
            + !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:ch_addr_0\
            + \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:ch_addr_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:ch_addr_5\
            + !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:ch_addr_4\
            + !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:ch_addr_3\
            + !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:ch_addr_2\
            + \ACC_ADC_A:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ACC_ADC_A:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_260 * !\ACC_ADC_A:bSAR_SEQ:load_period\
        );
        Output = \ACC_ADC_A:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\ARM_ANGLE_ENCODER:Net_1260\ * 
              !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\ * 
              !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\
        );
        Output = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload\ (fanout=2)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_0\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_i\ * 
              !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\
        );
        Output = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_0\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\ * 
              !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow_reg_i\
        );
        Output = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_2\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_3\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\ * 
              !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:underflow_reg_i\
        );
        Output = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_3\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_enable\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_7\ * 
              !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_stored_i\ * 
              \ARM_ANGLE_ENCODER:Net_1203\
        );
        Output = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_enable\ (fanout=2)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Net_530\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:Net_1275\ * \ARM_ANGLE_ENCODER:Net_1251\ * 
              !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\
        );
        Output = \ARM_ANGLE_ENCODER:Net_530\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Net_611\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:Net_1275\ * !\ARM_ANGLE_ENCODER:Net_1251\ * 
              !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\
        );
        Output = \ARM_ANGLE_ENCODER:Net_611\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:ch_addr_5\
            + !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:ch_addr_4\
            + !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:ch_addr_3\
            + !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:ch_addr_2\
            + \ACC_B_ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ACC_B_ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_363 * !\ACC_B_ADC:bSAR_SEQ:load_period\
        );
        Output = \ACC_B_ADC:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Net_1203_split\, Mode=(Combinatorial)
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              !\ARM_ANGLE_ENCODER:Net_1260\ * \ARM_ANGLE_ENCODER:Net_1203\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
        );
        Output = \ARM_ANGLE_ENCODER:Net_1203_split\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Net_1251_split\, Mode=(Combinatorial)
        Total # of inputs        : 7
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ARM_ANGLE_ENCODER:Net_1251\ * !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\
            + \ARM_ANGLE_ENCODER:Net_1251\ * !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + \ARM_ANGLE_ENCODER:Net_1251\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + \ARM_ANGLE_ENCODER:Net_1251\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
        );
        Output = \ARM_ANGLE_ENCODER:Net_1251_split\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_358
        );
        Output = \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\ (fanout=2)

    MacroCell: Name=\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\
        );
        Output = \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\ (fanout=2)

    MacroCell: Name=\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\
        );
        Output = \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_2\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_357
        );
        Output = \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\ (fanout=2)

    MacroCell: Name=\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\
        );
        Output = \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\ (fanout=2)

    MacroCell: Name=\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\
        );
        Output = \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_2\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:ch_addr_5\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:ch_addr_4\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:ch_addr_3\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:ch_addr_2\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:ch_addr_1\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:ch_addr_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_261, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: PosEdge(\ACC_ADC_A:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ACC_ADC_A:bSAR_SEQ:nrq_reg\
        );
        Output = Net_261 (fanout=3)

    MacroCell: Name=\ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_261
            + \ACC_ADC_A:Net_3935\
        );
        Output = \ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ACC_ADC_A:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_ADC_A:clock\) => Global
            Clock Enable: PosEdge(\ACC_ADC_A:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ACC_ADC_A:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Net_1251\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              \ARM_ANGLE_ENCODER:Net_1251\ * !\ARM_ANGLE_ENCODER:Net_1260\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + \ARM_ANGLE_ENCODER:Net_1251\ * !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + \ARM_ANGLE_ENCODER:Net_1251\ * !\ARM_ANGLE_ENCODER:Net_1260\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_1\
            + \ARM_ANGLE_ENCODER:Net_1251_split\
        );
        Output = \ARM_ANGLE_ENCODER:Net_1251\ (fanout=6)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow_reg_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\
        );
        Output = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow_reg_i\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:underflow_reg_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\
        );
        Output = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:underflow_reg_i\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Net_1275\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\ * 
              !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\
        );
        Output = \ARM_ANGLE_ENCODER:Net_1275\ (fanout=2)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_i\
        );
        Output = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\ (fanout=3)

    MacroCell: Name=\ACC_ADC_A:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * !\ACC_ADC_A:ch_addr_5\
            + \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:ch_addr_4\
            + \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:ch_addr_3\
            + \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:ch_addr_2\
            + !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:ch_addr_1\
            + \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:ch_addr_1\
            + !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:ch_addr_0\
            + \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:ch_addr_0\
        );
        Output = \ACC_ADC_A:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_stored_i\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ARM_ANGLE_ENCODER:Net_1203\
        );
        Output = \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_stored_i\ (fanout=1)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Net_1203\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + \ARM_ANGLE_ENCODER:Net_1203_split\
        );
        Output = \ARM_ANGLE_ENCODER:Net_1203\ (fanout=3)

    MacroCell: Name=\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_2\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\
            + \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_2\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\
        );
        Output = \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ (fanout=8)

    MacroCell: Name=\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_2\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
            + \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_2\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
        );
        Output = \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ (fanout=8)

    MacroCell: Name=\ARM_ANGLE_ENCODER:Net_1260\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        !(
              !\ARM_ANGLE_ENCODER:Net_1260\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
        );
        Output = \ARM_ANGLE_ENCODER:Net_1260\ (fanout=10)

    MacroCell: Name=\ARM_ANGLE_ENCODER:bQuadDec:error\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ARM_ANGLE_ENCODER:Net_1260\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
        );
        Output = \ARM_ANGLE_ENCODER:bQuadDec:error\ (fanout=9)

    MacroCell: Name=\ARM_ANGLE_ENCODER:bQuadDec:state_1\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_1\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
        );
        Output = \ARM_ANGLE_ENCODER:bQuadDec:state_1\ (fanout=8)

    MacroCell: Name=\ARM_ANGLE_ENCODER:bQuadDec:state_0\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (Net_355) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_1\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:Net_1260\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
            + !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * 
              \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:error\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * 
              !\ARM_ANGLE_ENCODER:bQuadDec:state_0\
        );
        Output = \ARM_ANGLE_ENCODER:bQuadDec:state_0\ (fanout=8)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:ch_addr_5\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:ch_addr_4\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:ch_addr_3\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:ch_addr_2\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:ch_addr_1\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:ch_addr_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ACC_B_ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_364, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: PosEdge(\ACC_B_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ACC_B_ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_364 (fanout=3)

    MacroCell: Name=\ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_364
            + \ACC_B_ADC:Net_3935\
        );
        Output = \ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ACC_B_ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ACC_B_ADC:clock\) => Global
            Clock Enable: PosEdge(\ACC_B_ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ACC_B_ADC:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0\
        PORT MAP (
            clock => Net_355 ,
            cs_addr_2 => \ARM_ANGLE_ENCODER:Net_1251\ ,
            cs_addr_1 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_enable\ ,
            cs_addr_0 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload\ ,
            chain_out => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101000000000000000000001000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Next in chain : \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u1\

    datapathcell: Name =\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u1\
        PORT MAP (
            clock => Net_355 ,
            cs_addr_2 => \ARM_ANGLE_ENCODER:Net_1251\ ,
            cs_addr_1 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_enable\ ,
            cs_addr_0 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload\ ,
            z0_comb => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\ ,
            f0_comb => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\ ,
            ce1_comb => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_i\ ,
            f0_bus_stat_comb => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_6\ ,
            f0_blk_stat_comb => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_5\ ,
            chain_in => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001000000001000000010000000000000010000000000000000100000000000000100000000010000001000000000000001000000011111111000000001111111111111111101011110000000000000001000001110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0\
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ACC_ADC_A:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ACC_ADC_A:clock\ ,
            status_0 => Net_261 ,
            clk_en => \ACC_ADC_A:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ACC_ADC_A:bSAR_SEQ:enable\)

    statuscell: Name =\ACC_B_ADC:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ACC_B_ADC:clock\ ,
            status_0 => Net_364 ,
            clk_en => \ACC_B_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ACC_B_ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sSTSReg:stsreg\
        PORT MAP (
            reset => \ARM_ANGLE_ENCODER:Net_1260\ ,
            clock => Net_355 ,
            status_6 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_6\ ,
            status_5 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_5\ ,
            status_3 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_3\ ,
            status_2 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_2\ ,
            status_1 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\ ,
            status_0 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\ARM_ANGLE_ENCODER:bQuadDec:Stsreg\
        PORT MAP (
            clock => Net_355 ,
            status_3 => \ARM_ANGLE_ENCODER:bQuadDec:error\ ,
            status_2 => \ARM_ANGLE_ENCODER:Net_1260\ ,
            status_1 => \ARM_ANGLE_ENCODER:Net_611\ ,
            status_0 => \ARM_ANGLE_ENCODER:Net_530\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "0001111"
            cy_md_select = "0001111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ACC_ADC_A:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ACC_ADC_A:nrq\ ,
            out => \ACC_ADC_A:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True

    synccell: Name =\ACC_B_ADC:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ACC_B_ADC:nrq\ ,
            out => \ACC_B_ADC:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ACC_ADC_A:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ACC_ADC_A:clock\ ,
            control_7 => \ACC_ADC_A:bSAR_SEQ:control_7\ ,
            control_6 => \ACC_ADC_A:bSAR_SEQ:control_6\ ,
            control_5 => \ACC_ADC_A:bSAR_SEQ:control_5\ ,
            control_4 => \ACC_ADC_A:bSAR_SEQ:control_4\ ,
            control_3 => \ACC_ADC_A:bSAR_SEQ:control_3\ ,
            control_2 => \ACC_ADC_A:bSAR_SEQ:control_2\ ,
            control_1 => \ACC_ADC_A:bSAR_SEQ:load_period\ ,
            control_0 => \ACC_ADC_A:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sCTRLReg:ctrlreg\
        PORT MAP (
            clock => Net_355 ,
            control_7 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_7\ ,
            control_6 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_6\ ,
            control_5 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_5\ ,
            control_4 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_4\ ,
            control_3 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_3\ ,
            control_2 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_2\ ,
            control_1 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_1\ ,
            control_0 => \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\RGB_LED:Sync:ctrl_reg\
        PORT MAP (
            control_7 => \RGB_LED:control_7\ ,
            control_6 => \RGB_LED:control_6\ ,
            control_5 => \RGB_LED:control_5\ ,
            control_4 => \RGB_LED:control_4\ ,
            control_3 => \RGB_LED:control_3\ ,
            control_2 => Net_244 ,
            control_1 => Net_243 ,
            control_0 => Net_246 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\ACC_B_ADC:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ACC_B_ADC:clock\ ,
            control_7 => \ACC_B_ADC:bSAR_SEQ:control_7\ ,
            control_6 => \ACC_B_ADC:bSAR_SEQ:control_6\ ,
            control_5 => \ACC_B_ADC:bSAR_SEQ:control_5\ ,
            control_4 => \ACC_B_ADC:bSAR_SEQ:control_4\ ,
            control_3 => \ACC_B_ADC:bSAR_SEQ:control_3\ ,
            control_2 => \ACC_B_ADC:bSAR_SEQ:control_2\ ,
            control_1 => \ACC_B_ADC:bSAR_SEQ:load_period\ ,
            control_0 => \ACC_B_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\ACC_ADC_A:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ACC_ADC_A:clock\ ,
            load => \ACC_ADC_A:bSAR_SEQ:load_period\ ,
            enable => \ACC_ADC_A:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ACC_ADC_A:bSAR_SEQ:count_6\ ,
            count_5 => \ACC_ADC_A:ch_addr_5\ ,
            count_4 => \ACC_ADC_A:ch_addr_4\ ,
            count_3 => \ACC_ADC_A:ch_addr_3\ ,
            count_2 => \ACC_ADC_A:ch_addr_2\ ,
            count_1 => \ACC_ADC_A:ch_addr_1\ ,
            count_0 => \ACC_ADC_A:ch_addr_0\ ,
            tc => \ACC_ADC_A:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ACC_ADC_A:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ACC_ADC_A:bSAR_SEQ:enable\)

    count7cell: Name =\ACC_B_ADC:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ACC_B_ADC:clock\ ,
            load => \ACC_B_ADC:bSAR_SEQ:load_period\ ,
            enable => \ACC_B_ADC:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ACC_B_ADC:bSAR_SEQ:count_6\ ,
            count_5 => \ACC_B_ADC:ch_addr_5\ ,
            count_4 => \ACC_B_ADC:ch_addr_4\ ,
            count_3 => \ACC_B_ADC:ch_addr_3\ ,
            count_2 => \ACC_B_ADC:ch_addr_2\ ,
            count_1 => \ACC_B_ADC:ch_addr_1\ ,
            count_0 => \ACC_B_ADC:ch_addr_0\ ,
            tc => \ACC_B_ADC:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ACC_B_ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ACC_B_ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ACC_ADC_A:TempBuf\
        PORT MAP (
            dmareq => \ACC_ADC_A:Net_3830\ ,
            termin => zero ,
            termout => \ACC_ADC_A:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ACC_ADC_A:FinalBuf\
        PORT MAP (
            dmareq => \ACC_ADC_A:Net_3698\ ,
            termin => zero ,
            termout => \ACC_ADC_A:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =ADC_A_DMA
        PORT MAP (
            dmareq => zero ,
            termin => zero ,
            termout => Net_107 );
        Properties:
        {
            drq_type = "10"
            num_tds = 0
        }

    drqcell: Name =\ACC_B_ADC:TempBuf\
        PORT MAP (
            dmareq => \ACC_B_ADC:Net_3830\ ,
            termin => zero ,
            termout => \ACC_B_ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ACC_B_ADC:FinalBuf\
        PORT MAP (
            dmareq => \ACC_B_ADC:Net_3698\ ,
            termin => zero ,
            termout => \ACC_B_ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =ADC_B_DMA
        PORT MAP (
            dmareq => zero ,
            termin => zero ,
            termout => Net_463 );
        Properties:
        {
            drq_type = "10"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\ACC_ADC_A:IRQ\
        PORT MAP (
            interrupt => Net_261 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ACC_B_ADC:IRQ\
        PORT MAP (
            interrupt => Net_364 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    3 :    5 :    8 : 37.50 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    2 :   30 :   32 :  6.25 %
IO                            :   26 :   22 :   48 : 54.17 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    6 :   18 :   24 : 25.00 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :  180 :   12 :  192 : 93.75 %
  Unique P-terms              :  229 :  155 :  384 : 59.64 %
  Total P-terms               :  235 :      :      :        
  Datapath Cells              :    2 :   22 :   24 :  8.33 %
  Status Cells                :    7 :   17 :   24 : 29.17 %
    Status Registers          :    2 :      :      :        
    StatusI Registers         :    2 :      :      :        
    Sync Cells (x2)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    6 :   18 :   24 : 25.00 %
    Control Registers         :    4 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    2 :    0 :    2 : 100.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.611ms
Tech Mapping phase: Elapsed time ==> 0s.702ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_263" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_265" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_267" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_268" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_270" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_272" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_273" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_275" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_277" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_278" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_280" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_282" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_283" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_285" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_287" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_288" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_290" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_292" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_293" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_295" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_297" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_298" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_300" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_302" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_303" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_305" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_307" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_308" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_310" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_312" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_313" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_315" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_317" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_318" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_320" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_322" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_323" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_325" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_327" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_328" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_330" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_332" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_333" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_335" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_337" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_338" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_339" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_340" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_341" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_342" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_343" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_344" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_345" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_346" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_347" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_348" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_349" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_350" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_351" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_352" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_353" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_369" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_371" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_373" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_374" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_376" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_378" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_379" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_381" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_383" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_384" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_386" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_388" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_389" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_391" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_393" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_394" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_396" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_398" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_399" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_401" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_403" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_404" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_406" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_408" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_409" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_411" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_413" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_414" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_416" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_418" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_419" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_421" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_423" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_424" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_426" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_428" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_429" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_431" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_433" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_434" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_436" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_438" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_439" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_441" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_443" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_444" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_445" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_446" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_447" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_448" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_449" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_450" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_451" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_452" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_453" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_454" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_455" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_456" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_457" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_458" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_459" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_1@[IOP=(3)][IoId=(1)] : ACC_A_X_PIN(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : ACC_A_Y_PIN(0) (fixed)
IO_1@[IOP=(15)][IoId=(1)] : ACC_A_Z_PIN(0) (fixed)
IO_3@[IOP=(15)][IoId=(3)] : ACC_B_X_PIN(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : ACC_B_Y_PIN(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : ACC_B_Z_PIN(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \LCD:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \LCD:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \LCD:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \LCD:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \LCD:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \LCD:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \LCD:LCDPort(6)\ (fixed)
SAR[1]@[FFB(SAR,1)] : \ACC_ADC_A:SAR:ADC_SAR\ (SAR-ExtVref)
IO_2@[IOP=(0)][IoId=(2)] : \ACC_ADC_A:SAR:Bypass(0)\ (SAR-ExtVref)
Vref[13]@[FFB(Vref,13)] : \ACC_ADC_A:SAR:vRef_Vdda_1\
SAR[0]@[FFB(SAR,0)] : \ACC_B_ADC:SAR:ADC_SAR\ (SAR-ExtVref)
IO_4@[IOP=(0)][IoId=(4)] : \ACC_B_ADC:SAR:Bypass(0)\ (SAR-ExtVref)
Log: apr.M0058: The analog placement iterative improvement is 56% done. (App=cydsfit)
Analog Placement Results:
IO_1@[IOP=(3)][IoId=(1)] : ACC_A_X_PIN(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : ACC_A_Y_PIN(0) (fixed)
IO_1@[IOP=(15)][IoId=(1)] : ACC_A_Z_PIN(0) (fixed)
IO_3@[IOP=(15)][IoId=(3)] : ACC_B_X_PIN(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : ACC_B_Y_PIN(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : ACC_B_Z_PIN(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \LCD:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \LCD:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \LCD:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \LCD:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \LCD:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \LCD:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \LCD:LCDPort(6)\ (fixed)
SAR[1]@[FFB(SAR,1)] : \ACC_ADC_A:SAR:ADC_SAR\ (SAR-ExtVref)
IO_2@[IOP=(0)][IoId=(2)] : \ACC_ADC_A:SAR:Bypass(0)\ (SAR-ExtVref)
Vref[13]@[FFB(Vref,13)] : \ACC_ADC_A:SAR:vRef_Vdda_1\
SAR[0]@[FFB(SAR,0)] : \ACC_B_ADC:SAR:ADC_SAR\ (SAR-ExtVref)
IO_4@[IOP=(0)][IoId=(4)] : \ACC_B_ADC:SAR:Bypass(0)\ (SAR-ExtVref)

Analog Placement phase: Elapsed time ==> 3s.059ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.015ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ACC_ADC_A:Net_2803\ {
    sar_1_vplus
  }
  Net: Net_5 {
    p3_1
  }
  Net: Net_6 {
    p3_5
  }
  Net: Net_8 {
    p15_1
  }
  Net: Net_263 {
  }
  Net: Net_265 {
  }
  Net: Net_267 {
  }
  Net: Net_268 {
  }
  Net: Net_270 {
  }
  Net: Net_272 {
  }
  Net: Net_273 {
  }
  Net: Net_275 {
  }
  Net: Net_277 {
  }
  Net: Net_278 {
  }
  Net: Net_280 {
  }
  Net: Net_282 {
  }
  Net: Net_283 {
  }
  Net: Net_285 {
  }
  Net: Net_287 {
  }
  Net: Net_288 {
  }
  Net: Net_290 {
  }
  Net: Net_292 {
  }
  Net: Net_293 {
  }
  Net: Net_295 {
  }
  Net: Net_297 {
  }
  Net: Net_298 {
  }
  Net: Net_300 {
  }
  Net: Net_302 {
  }
  Net: Net_303 {
  }
  Net: Net_305 {
  }
  Net: Net_307 {
  }
  Net: Net_308 {
  }
  Net: Net_310 {
  }
  Net: Net_312 {
  }
  Net: Net_313 {
  }
  Net: Net_315 {
  }
  Net: Net_317 {
  }
  Net: Net_318 {
  }
  Net: Net_320 {
  }
  Net: Net_322 {
  }
  Net: Net_323 {
  }
  Net: Net_325 {
  }
  Net: Net_327 {
  }
  Net: Net_328 {
  }
  Net: Net_330 {
  }
  Net: Net_332 {
  }
  Net: Net_333 {
  }
  Net: Net_335 {
  }
  Net: Net_337 {
  }
  Net: Net_338 {
  }
  Net: Net_339 {
  }
  Net: Net_340 {
  }
  Net: Net_341 {
  }
  Net: Net_342 {
  }
  Net: Net_343 {
  }
  Net: Net_344 {
  }
  Net: Net_345 {
  }
  Net: Net_346 {
  }
  Net: Net_347 {
  }
  Net: Net_348 {
  }
  Net: Net_349 {
  }
  Net: Net_350 {
  }
  Net: Net_351 {
  }
  Net: Net_352 {
  }
  Net: Net_353 {
  }
  Net: \ACC_B_ADC:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_365 {
    p15_3
  }
  Net: Net_366 {
    p0_3
  }
  Net: Net_368 {
    p0_7
  }
  Net: Net_369 {
  }
  Net: Net_371 {
  }
  Net: Net_373 {
  }
  Net: Net_374 {
  }
  Net: Net_376 {
  }
  Net: Net_378 {
  }
  Net: Net_379 {
  }
  Net: Net_381 {
  }
  Net: Net_383 {
  }
  Net: Net_384 {
  }
  Net: Net_386 {
  }
  Net: Net_388 {
  }
  Net: Net_389 {
  }
  Net: Net_391 {
  }
  Net: Net_393 {
  }
  Net: Net_394 {
  }
  Net: Net_396 {
  }
  Net: Net_398 {
  }
  Net: Net_399 {
  }
  Net: Net_401 {
  }
  Net: Net_403 {
  }
  Net: Net_404 {
  }
  Net: Net_406 {
  }
  Net: Net_408 {
  }
  Net: Net_409 {
  }
  Net: Net_411 {
  }
  Net: Net_413 {
  }
  Net: Net_414 {
  }
  Net: Net_416 {
  }
  Net: Net_418 {
  }
  Net: Net_419 {
  }
  Net: Net_421 {
  }
  Net: Net_423 {
  }
  Net: Net_424 {
  }
  Net: Net_426 {
  }
  Net: Net_428 {
  }
  Net: Net_429 {
  }
  Net: Net_431 {
  }
  Net: Net_433 {
  }
  Net: Net_434 {
  }
  Net: Net_436 {
  }
  Net: Net_438 {
  }
  Net: Net_439 {
  }
  Net: Net_441 {
  }
  Net: Net_443 {
  }
  Net: Net_444 {
  }
  Net: Net_445 {
  }
  Net: Net_446 {
  }
  Net: Net_447 {
  }
  Net: Net_448 {
  }
  Net: Net_449 {
  }
  Net: Net_450 {
  }
  Net: Net_451 {
  }
  Net: Net_452 {
  }
  Net: Net_453 {
  }
  Net: Net_454 {
  }
  Net: Net_455 {
  }
  Net: Net_456 {
  }
  Net: Net_457 {
  }
  Net: Net_458 {
  }
  Net: Net_459 {
  }
  Net: \ACC_ADC_A:SAR:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \ACC_ADC_A:SAR:Net_210\ {
    p0_2
    p0_2_exvref
  }
  Net: \ACC_ADC_A:SAR:Net_235\ {
    sar_0_vref
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2
    sar_1_vref_vdda_vdda_2
    sar_1_vref_x_sar_1_vref_vdda_vdda_2
    sar_1_vref
  }
  Net: \ACC_B_ADC:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ACC_B_ADC:SAR:Net_210\ {
    p0_4
    p0_4_exvref
  }
  Net: AmuxNet::\ACC_ADC_A:AMuxHw_2\ {
    sar_1_vplus
    agr5_x_sar_1_vplus
    agr5
    agr5_x_p3_1
    agr5_x_p3_5
    agr5_x_p15_1
    p3_1
    p3_5
    p15_1
  }
  Net: AmuxNet::\ACC_B_ADC:AMuxHw_2\ {
    sar_0_vplus
    agl7_x_sar_0_vplus
    agl7
    agl7_x_agr7
    agr7
    agr7_x_p15_3
    agl7_x_p0_3
    agl7_x_p0_7
    p15_3
    p0_3
    p0_7
  }
}
Map of item to net {
  sar_1_vrefhi                                     -> \ACC_ADC_A:SAR:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \ACC_ADC_A:SAR:Net_126\
  sar_1_vminus                                     -> \ACC_ADC_A:SAR:Net_126\
  p0_2                                             -> \ACC_ADC_A:SAR:Net_210\
  p0_2_exvref                                      -> \ACC_ADC_A:SAR:Net_210\
  sar_0_vref                                       -> \ACC_ADC_A:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \ACC_ADC_A:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \ACC_ADC_A:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \ACC_ADC_A:SAR:Net_235\
  common_sar_vref_vdda/2                           -> \ACC_ADC_A:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2  -> \ACC_ADC_A:SAR:Net_235\
  sar_1_vref_vdda_vdda_2                           -> \ACC_ADC_A:SAR:Net_235\
  sar_1_vref_x_sar_1_vref_vdda_vdda_2              -> \ACC_ADC_A:SAR:Net_235\
  sar_1_vref                                       -> \ACC_ADC_A:SAR:Net_235\
  sar_0_vrefhi                                     -> \ACC_B_ADC:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ACC_B_ADC:SAR:Net_126\
  sar_0_vminus                                     -> \ACC_B_ADC:SAR:Net_126\
  p0_4                                             -> \ACC_B_ADC:SAR:Net_210\
  p0_4_exvref                                      -> \ACC_B_ADC:SAR:Net_210\
  sar_1_vplus                                      -> \ACC_ADC_A:Net_2803\
  p3_1                                             -> Net_5
  p3_5                                             -> Net_6
  p15_1                                            -> Net_8
  sar_0_vplus                                      -> \ACC_B_ADC:Net_2803\
  p15_3                                            -> Net_365
  p0_3                                             -> Net_366
  p0_7                                             -> Net_368
  agr5_x_sar_1_vplus                               -> AmuxNet::\ACC_ADC_A:AMuxHw_2\
  agr5                                             -> AmuxNet::\ACC_ADC_A:AMuxHw_2\
  agr5_x_p3_1                                      -> AmuxNet::\ACC_ADC_A:AMuxHw_2\
  agr5_x_p3_5                                      -> AmuxNet::\ACC_ADC_A:AMuxHw_2\
  agr5_x_p15_1                                     -> AmuxNet::\ACC_ADC_A:AMuxHw_2\
  agl7_x_sar_0_vplus                               -> AmuxNet::\ACC_B_ADC:AMuxHw_2\
  agl7                                             -> AmuxNet::\ACC_B_ADC:AMuxHw_2\
  agl7_x_agr7                                      -> AmuxNet::\ACC_B_ADC:AMuxHw_2\
  agr7                                             -> AmuxNet::\ACC_B_ADC:AMuxHw_2\
  agr7_x_p15_3                                     -> AmuxNet::\ACC_B_ADC:AMuxHw_2\
  agl7_x_p0_3                                      -> AmuxNet::\ACC_B_ADC:AMuxHw_2\
  agl7_x_p0_7                                      -> AmuxNet::\ACC_B_ADC:AMuxHw_2\
}
Mux Info {
  Mux: \ACC_ADC_A:AMuxHw_2\ {
     Mouth: \ACC_ADC_A:Net_2803\
     Guts:  AmuxNet::\ACC_ADC_A:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_5
      Outer: agr5_x_p3_1
      Inner: __open__
      Path {
        p3_1
        agr5_x_p3_1
        agr5
        agr5_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 1 {
      Net:   Net_6
      Outer: agr5_x_p3_5
      Inner: __open__
      Path {
        p3_5
        agr5_x_p3_5
        agr5
        agr5_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 2 {
      Net:   Net_8
      Outer: agr5_x_p15_1
      Inner: __open__
      Path {
        p15_1
        agr5_x_p15_1
        agr5
        agr5_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 3 {
      Net:   Net_263
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_265
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_267
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_268
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_270
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_272
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_273
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_275
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_277
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_278
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_280
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_282
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_283
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_285
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_287
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_288
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_290
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_292
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_293
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_295
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_297
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_298
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_300
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_302
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_303
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_305
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_307
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_308
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_310
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_312
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_313
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_315
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_317
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_318
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_320
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_322
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_323
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_325
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_327
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_328
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_330
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_332
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_333
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_335
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_337
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_338
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_339
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_340
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_341
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_342
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_343
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_344
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_345
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_346
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_347
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_348
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_349
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_350
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_351
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_352
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_353
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
  Mux: \ACC_B_ADC:AMuxHw_2\ {
     Mouth: \ACC_B_ADC:Net_2803\
     Guts:  AmuxNet::\ACC_B_ADC:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_365
      Outer: agr7_x_p15_3
      Inner: agl7_x_agr7
      Path {
        p15_3
        agr7_x_p15_3
        agr7
        agl7_x_agr7
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_366
      Outer: agl7_x_p0_3
      Inner: __open__
      Path {
        p0_3
        agl7_x_p0_3
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_368
      Outer: agl7_x_p0_7
      Inner: __open__
      Path {
        p0_7
        agl7_x_p0_7
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_369
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_371
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_373
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_374
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_376
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_378
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_379
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_381
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_383
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_384
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_386
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_388
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_389
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_391
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_393
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_394
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_396
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_398
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_399
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_401
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_403
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_404
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_406
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_408
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_409
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_411
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_413
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_414
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_416
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_418
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_419
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_421
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_423
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_424
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_426
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_428
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_429
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_431
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_433
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_434
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_436
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_438
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_439
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_441
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_443
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_444
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_445
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_446
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_447
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_448
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_449
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_450
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_451
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_452
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_453
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_454
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_455
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_456
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_457
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_458
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_459
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = True
Analog Code Generation phase: Elapsed time ==> 0s.298ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
Error: plm.M0046: E2071: Unable to pack the design into 24 UDBs. See the Digital Placement section of the report file for details. For additional assistance, see the Mapper, Placer, Router section in the PSoC Creator help.
Error: plm.M0046: E2055: An error occurred during placement of the design.
"C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\bin/sjplacer.exe" --proj-name "STS_Firmware" --netlist-vh2 "STS_Firmware_p.vh2" --arch p35_udb4x6 --arch-file "C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\dev\arch/udbdsi_4x6_24.cydata" --ip-file "C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\dev\psoc5/psoc5lp/ip_blocks.cydata" --rrg-file "C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --irq-file "C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\dev\psoc5/psoc5lp/irqconn.cydata" --drq-file "C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\dev\psoc5/psoc5lp/dmaconn.cydata" --dsi-conn-file "C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\dev\psoc5/psoc5lp/dsiconn.cydata" --pins-file "pins_68-QFN.xml" --lib-file "STS_Firmware_p.lib" --sdc-file "STS_Firmware.sdc" --io-pcf "STS_Firmware.pci" --outdir .
<CYPRESSTAG name="Detailed placement messages">
E2071: Unable to pack the design into 24 UDBs. See the Digital Placement section of the report file for details. For additional assistance, see the Mapper, Placer, Router section in the PSoC Creator help.
I2722: The following instances could not be placed:

   \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\:macrocell
   \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\:macrocell
   \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\:macrocell
   \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\:macrocell
   \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\:macrocell
   \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\:macrocell
   \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\:macrocell
   \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\:macrocell
   \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\:macrocell
   \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\:macrocell
   \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\:macrocell
   \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\:macrocell

======================================================
UDB 0
------------------------------------------------------
	PLD 0:
		 Instances:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_2\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow_reg_i\
			\ARM_ANGLE_ENCODER:Net_1275\

		 Clock net: Net_355
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow_reg_i\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\
			\ARM_ANGLE_ENCODER:Net_1260\

		 Output nets:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow_reg_i\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_2\
			\ARM_ANGLE_ENCODER:Net_1275\

		 Product terms:
			!\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\ * !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\
			!\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\ * !\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\ * !\ARM_ANGLE_ENCODER:Net_1260\
			!\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow_reg_i\ * \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\

	PLD 1:
		 Instances:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_3\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:underflow_reg_i\
			\ARM_ANGLE_ENCODER:Net_611\
			\ARM_ANGLE_ENCODER:Net_530\

		 Clock net: Net_355
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:underflow_reg_i\
			\ARM_ANGLE_ENCODER:Net_1251\
			\ARM_ANGLE_ENCODER:Net_1275\

		 Output nets:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_3\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:underflow_reg_i\
			\ARM_ANGLE_ENCODER:Net_530\
			\ARM_ANGLE_ENCODER:Net_611\

		 Product terms:
			!\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\ * !\ARM_ANGLE_ENCODER:Net_1251\ * \ARM_ANGLE_ENCODER:Net_1275\
			!\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\ * \ARM_ANGLE_ENCODER:Net_1251\ * \ARM_ANGLE_ENCODER:Net_1275\
			!\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:underflow_reg_i\ * \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\

	Datapath:
		 Instances:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0\

		 Clock net: Net_355
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			ClockBlock_BUS_CLK
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_enable\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u1.cmsbo__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u1.sor__sig\
			\ARM_ANGLE_ENCODER:Net_1251\

		 Output nets:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.ce0__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.ce1__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.cfbo__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.cl0__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.cl1__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.co_msb__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.ff0__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.ff1__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.sol_msb__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.z0__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.z1__sig\

	Control, status and sync:
		 Instances:
			\ACC_ADC_A:bSAR_SEQ:ChannelCounter\ : count7cell

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: \ACC_ADC_A:bSAR_SEQ:enable\

		 Input nets:
			\ACC_ADC_A:bSAR_SEQ:cnt_enable\
			\ACC_ADC_A:bSAR_SEQ:load_period\

		 Output nets:
			\ACC_ADC_A:ch_addr_0\
			\ACC_ADC_A:ch_addr_1\
			\ACC_ADC_A:ch_addr_2\
			\ACC_ADC_A:ch_addr_3\
			\ACC_ADC_A:ch_addr_4\
			\ACC_ADC_A:ch_addr_5\

	Local clock and reset nets:
			\ACC_ADC_A:bSAR_SEQ:enable\

======================================================
UDB 1
------------------------------------------------------
	PLD 0:
		 Instances:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_stored_i\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_0\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_enable\

		 Clock net: Net_355
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_i\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_7\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_stored_i\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\
			\ARM_ANGLE_ENCODER:Net_1203\

		 Output nets:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_enable\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_stored_i\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_0\

		 Product terms:
			!\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_stored_i\ * \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_7\ * \ARM_ANGLE_ENCODER:Net_1203\
			!\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:prevCompare\ * \ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_i\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_i\
			\ARM_ANGLE_ENCODER:Net_1203\

	PLD 1:
		 Instances:
			\ARM_ANGLE_ENCODER:Net_1203\
			\ARM_ANGLE_ENCODER:Net_1260\
			\ARM_ANGLE_ENCODER:bQuadDec:state_0\

		 Clock net: Net_355
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ARM_ANGLE_ENCODER:Net_1203_split\
			\ARM_ANGLE_ENCODER:Net_1260\
			\ARM_ANGLE_ENCODER:bQuadDec:error\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:state_0\
			\ARM_ANGLE_ENCODER:bQuadDec:state_1\

		 Output nets:
			\ARM_ANGLE_ENCODER:Net_1203\
			\ARM_ANGLE_ENCODER:Net_1260\
			\ARM_ANGLE_ENCODER:bQuadDec:state_0\

		 Product terms:
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_0\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:bQuadDec:error\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			!\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			!\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\
			\ARM_ANGLE_ENCODER:Net_1203_split\

	Datapath:
		 Instances:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u1\

		 Clock net: Net_355
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			ClockBlock_BUS_CLK
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:count_enable\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:reload\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.ce0__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.ce1__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.cfbo__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.cl0__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.cl1__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.co_msb__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.ff0__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.ff1__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.sol_msb__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.z0__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u0.z1__sig\
			\ARM_ANGLE_ENCODER:Net_1251\

		 Output nets:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:cmp_out_i\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:overflow\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u1.cmsbo__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sC16:counterdp:u1.sor__sig\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_5\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_6\

	Control, status and sync:
		 Instances:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sCTRLReg:ctrlreg\ : controlcell
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:sSTSReg:stsreg\ : statusicell

		 Clock net: Net_355
		 Set/Reset net: \ARM_ANGLE_ENCODER:Net_1260\
		 Enable net: 

		 Input nets:
			ClockBlock_BUS_CLK
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_0\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_1\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_2\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_3\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_5\
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:status_6\

		 Output nets:
			\ARM_ANGLE_ENCODER:Cnt16:CounterUDB:control_7\

	Local clock and reset nets:
			\ARM_ANGLE_ENCODER:Net_1260\

======================================================
UDB 10
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_43\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_42\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_41\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_53\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

	PLD 1:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_48\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_46\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_49\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_45\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 11
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_23\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_21\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_22\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_59\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\

	PLD 1:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_24\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_27\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_25\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_26\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 12
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_30\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_29\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_28\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_63\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

	PLD 1:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_32\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_33\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_31\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_34\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 13
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_35\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_36\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_37\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_42\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

	PLD 1:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_39\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_43\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_41\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 14
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_45\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_44\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_47\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_46\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

	PLD 1:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_49\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_50\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_48\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 15
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_52\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_51\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_53\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_62\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

	PLD 1:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_54\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_55\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_56\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_57\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 16
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_51\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_50\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_56\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_4\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

	PLD 1:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_58\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_59\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_57\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_5\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 17
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_58\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_61\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_60\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_5\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

	PLD 1:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_6\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_8\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_9\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_7\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 18
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_60\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_61\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_62\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_7\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\

	PLD 1:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_8\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_9\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_63\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_6\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 19
------------------------------------------------------
	PLD 0:
		 Instances:
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_2\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\
			\ARM_ANGLE_ENCODER:bQuadDec:error\

		 Clock net: Net_355
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ARM_ANGLE_ENCODER:Net_1260\
			\ARM_ANGLE_ENCODER:bQuadDec:error\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_2\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:state_0\
			\ARM_ANGLE_ENCODER:bQuadDec:state_1\

		 Output nets:
			\ARM_ANGLE_ENCODER:bQuadDec:error\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_2\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\

		 Product terms:
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_0\ * \ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_0\
			!\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			!\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_2\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\
			!\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_2\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_1\

	PLD 1:
		 Instances:
			\ARM_ANGLE_ENCODER:Net_1203_split\

		 Clock net: 
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ARM_ANGLE_ENCODER:Net_1203\
			\ARM_ANGLE_ENCODER:Net_1260\
			\ARM_ANGLE_ENCODER:bQuadDec:error\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:state_0\
			\ARM_ANGLE_ENCODER:bQuadDec:state_1\

		 Output nets:
			\ARM_ANGLE_ENCODER:Net_1203_split\

		 Product terms:
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * \ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:bQuadDec:state_0\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_0\ * \ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_0\ * \ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_0\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:Net_1203\ * \ARM_ANGLE_ENCODER:bQuadDec:error\
			!\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 2
------------------------------------------------------
	PLD 0:
		 Instances:
			\ARM_ANGLE_ENCODER:Net_1251\
			\ARM_ANGLE_ENCODER:bQuadDec:state_1\

		 Clock net: Net_355
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ARM_ANGLE_ENCODER:Net_1251\
			\ARM_ANGLE_ENCODER:Net_1251_split\
			\ARM_ANGLE_ENCODER:Net_1260\
			\ARM_ANGLE_ENCODER:bQuadDec:error\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:state_0\
			\ARM_ANGLE_ENCODER:bQuadDec:state_1\

		 Output nets:
			\ARM_ANGLE_ENCODER:Net_1251\
			\ARM_ANGLE_ENCODER:bQuadDec:state_1\

		 Product terms:
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * \ARM_ANGLE_ENCODER:Net_1251\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:Net_1251\ * \ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * \ARM_ANGLE_ENCODER:Net_1251\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_0\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_0\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:bQuadDec:error\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\
			!\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\
			\ARM_ANGLE_ENCODER:Net_1251_split\

	PLD 1:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active_split\

		 Clock net: 
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			\ACC_ADC_A:ch_addr_0\
			\ACC_ADC_A:ch_addr_1\
			\ACC_ADC_A:ch_addr_2\
			\ACC_ADC_A:ch_addr_3\
			\ACC_ADC_A:ch_addr_4\
			\ACC_ADC_A:ch_addr_5\

		 Output nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active_split\

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:ch_addr_0\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:ch_addr_1\
			!\ACC_ADC_A:ch_addr_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			!\ACC_ADC_A:ch_addr_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			!\ACC_ADC_A:ch_addr_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			!\ACC_ADC_A:ch_addr_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			!\ACC_ADC_A:ch_addr_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:ch_addr_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

	Datapath:

	Control, status and sync:
		 Instances:
			\ACC_B_ADC:bSAR_SEQ:ChannelCounter\ : count7cell

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: \ACC_B_ADC:bSAR_SEQ:enable\

		 Input nets:
			\ACC_B_ADC:bSAR_SEQ:cnt_enable\
			\ACC_B_ADC:bSAR_SEQ:load_period\

		 Output nets:
			\ACC_B_ADC:ch_addr_0\
			\ACC_B_ADC:ch_addr_1\
			\ACC_B_ADC:ch_addr_2\
			\ACC_B_ADC:ch_addr_3\
			\ACC_B_ADC:ch_addr_4\
			\ACC_B_ADC:ch_addr_5\

	Local clock and reset nets:
			\ACC_B_ADC:bSAR_SEQ:enable\

======================================================
UDB 20
------------------------------------------------------
	PLD 0:
		 Instances:
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_2\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\

		 Clock net: Net_355
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			Net_357
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_2\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\

		 Output nets:
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_2\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\

		 Product terms:
			!\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_2\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			!\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_2\
			Net_357
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_0\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_delayed_1\

	PLD 1:
		 Instances:
			\ARM_ANGLE_ENCODER:Net_1251_split\

		 Clock net: 
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ARM_ANGLE_ENCODER:Net_1251\
			\ARM_ANGLE_ENCODER:Net_1260\
			\ARM_ANGLE_ENCODER:bQuadDec:error\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			\ARM_ANGLE_ENCODER:bQuadDec:state_0\
			\ARM_ANGLE_ENCODER:bQuadDec:state_1\

		 Output nets:
			\ARM_ANGLE_ENCODER:Net_1251_split\

		 Product terms:
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * \ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_0\ * \ARM_ANGLE_ENCODER:bQuadDec:state_1\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:Net_1251\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\ * \ARM_ANGLE_ENCODER:bQuadDec:state_0\
			!\ARM_ANGLE_ENCODER:Net_1260\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:Net_1251\ * \ARM_ANGLE_ENCODER:bQuadDec:error\
			!\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:Net_1251\
			!\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:quad_A_filt\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\
			!\ARM_ANGLE_ENCODER:bQuadDec:error\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_0\ * !\ARM_ANGLE_ENCODER:bQuadDec:state_1\ * \ARM_ANGLE_ENCODER:Net_1251\ * \ARM_ANGLE_ENCODER:bQuadDec:quad_B_filt\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 21
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\

		 Clock net: ClockBlock_BUS_CLK
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			Net_261
			\ACC_ADC_A:Net_3935\
			\ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active_split\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			\ACC_B_ADC:ch_addr_2\
			\ACC_B_ADC:ch_addr_3\
			\ACC_B_ADC:ch_addr_4\
			\ACC_B_ADC:ch_addr_5\

		 Output nets:
			\ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\

		 Product terms:
			!Net_261 * \ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:ch_addr_2\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:ch_addr_3\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:ch_addr_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:ch_addr_5\
			\ACC_ADC_A:Net_3935\
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active_split\

	PLD 1:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active_split\

		 Clock net: 
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			\ACC_B_ADC:ch_addr_0\
			\ACC_B_ADC:ch_addr_1\
			\ACC_B_ADC:ch_addr_2\
			\ACC_B_ADC:ch_addr_3\
			\ACC_B_ADC:ch_addr_4\
			\ACC_B_ADC:ch_addr_5\

		 Output nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active_split\

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:ch_addr_0\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:ch_addr_1\
			!\ACC_B_ADC:ch_addr_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			!\ACC_B_ADC:ch_addr_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			!\ACC_B_ADC:ch_addr_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			!\ACC_B_ADC:ch_addr_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			!\ACC_B_ADC:ch_addr_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:ch_addr_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 22
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\

		 Clock net: ClockBlock_BUS_CLK
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			Net_364
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active_split\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			\ACC_ADC_A:ch_addr_2\
			\ACC_ADC_A:ch_addr_3\
			\ACC_ADC_A:ch_addr_4\
			\ACC_ADC_A:ch_addr_5\
			\ACC_B_ADC:Net_3935\
			\ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\

		 Output nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\

		 Product terms:
			!Net_364 * \ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:ch_addr_2\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:ch_addr_3\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:ch_addr_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:ch_addr_5\
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active_split\
			\ACC_B_ADC:Net_3935\

	PLD 1:
		 Instances:
			Net_261
			\ACC_ADC_A:bSAR_SEQ:cnt_enable\
			\ACC_ADC_A:bSAR_SEQ:nrq_reg\
			\ACC_B_ADC:bSAR_SEQ:cnt_enable\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: \ACC_ADC_A:bSAR_SEQ:enable\

		 Input nets:
			Net_260
			Net_363
			\ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\
			\ACC_ADC_A:bSAR_SEQ:load_period\
			\ACC_ADC_A:bSAR_SEQ:nrq_reg\
			\ACC_B_ADC:bSAR_SEQ:load_period\

		 Output nets:
			Net_261
			\ACC_ADC_A:bSAR_SEQ:cnt_enable\
			\ACC_ADC_A:bSAR_SEQ:nrq_reg\
			\ACC_B_ADC:bSAR_SEQ:cnt_enable\

		 Product terms:
			!Net_260 * !\ACC_ADC_A:bSAR_SEQ:load_period\
			!Net_363 * !\ACC_B_ADC:bSAR_SEQ:load_period\
			!\ACC_ADC_A:bSAR_SEQ:nrq_reg\ * \ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\
			\ACC_ADC_A:bSAR_SEQ:bus_clk_nrq_reg\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:
			\ACC_ADC_A:bSAR_SEQ:enable\

======================================================
UDB 23
------------------------------------------------------
	PLD 0:
		 Instances:
			Net_364
			\ACC_B_ADC:bSAR_SEQ:nrq_reg\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: \ACC_B_ADC:bSAR_SEQ:enable\

		 Input nets:
			\ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\
			\ACC_B_ADC:bSAR_SEQ:nrq_reg\

		 Output nets:
			Net_364
			\ACC_B_ADC:bSAR_SEQ:nrq_reg\

		 Product terms:
			!\ACC_B_ADC:bSAR_SEQ:nrq_reg\ * \ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\
			\ACC_B_ADC:bSAR_SEQ:bus_clk_nrq_reg\

	PLD 1:
		 Instances:
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\

		 Clock net: Net_355
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			Net_358

		 Output nets:
			\ARM_ANGLE_ENCODER:bQuadDec:quad_A_delayed_0\

		 Product terms:
			Net_358

	Datapath:

	Control, status and sync:

	Local clock and reset nets:
			\ACC_B_ADC:bSAR_SEQ:enable\

======================================================
UDB 24
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:ch_addr_1\
			\ACC_B_ADC:ch_addr_2\
			\ACC_B_ADC:ch_addr_3\
			\ACC_B_ADC:ch_addr_5\

		 Output nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Product terms:
			\ACC_B_ADC:ch_addr_1\
			\ACC_B_ADC:ch_addr_2\
			\ACC_B_ADC:ch_addr_3\
			\ACC_B_ADC:ch_addr_5\

	PLD 1:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:ch_addr_0\
			\ACC_ADC_A:ch_addr_1\
			\ACC_ADC_A:ch_addr_2\
			\ACC_ADC_A:ch_addr_4\

		 Output nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\

		 Product terms:
			\ACC_ADC_A:ch_addr_0\
			\ACC_ADC_A:ch_addr_1\
			\ACC_ADC_A:ch_addr_2\
			\ACC_ADC_A:ch_addr_4\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 25
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:ch_addr_3\
			\ACC_ADC_A:ch_addr_5\

		 Output nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Product terms:
			\ACC_ADC_A:ch_addr_3\
			\ACC_ADC_A:ch_addr_5\

	PLD 1:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:ch_addr_0\
			\ACC_B_ADC:ch_addr_4\

		 Output nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\

		 Product terms:
			\ACC_B_ADC:ch_addr_0\
			\ACC_B_ADC:ch_addr_4\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

======================================================
UDB 3
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_38\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_2\

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\

	PLD 1:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_11\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_13\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_10\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_12\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\

	Datapath:

	Control, status and sync:
		 Instances:
			\ACC_B_ADC:bSAR_SEQ:CtrlReg\ : controlcell

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			ClockBlock_BUS_CLK

		 Output nets:
			\ACC_B_ADC:bSAR_SEQ:enable\
			\ACC_B_ADC:bSAR_SEQ:load_period\

	Local clock and reset nets:

======================================================
UDB 4
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_44\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_2\

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\

	PLD 1:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_13\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_10\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_12\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_11\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\

	Datapath:

	Control, status and sync:
		 Instances:
			\ACC_ADC_A:bSAR_SEQ:CtrlReg\ : controlcell

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			ClockBlock_BUS_CLK

		 Output nets:
			\ACC_ADC_A:bSAR_SEQ:enable\
			\ACC_ADC_A:bSAR_SEQ:load_period\

	Local clock and reset nets:

======================================================
UDB 5
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_16\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_15\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_14\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_55\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\

	PLD 1:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_17\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_19\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_18\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_20\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\

	Datapath:

	Control, status and sync:
		 Instances:
			\RGB_LED:Sync:ctrl_reg\ : controlcell
			\ARM_ANGLE_ENCODER:bQuadDec:Stsreg\ : statusicell

		 Clock net: Net_355
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			ClockBlock_BUS_CLK
			\ARM_ANGLE_ENCODER:Net_1260\
			\ARM_ANGLE_ENCODER:Net_530\
			\ARM_ANGLE_ENCODER:Net_611\
			\ARM_ANGLE_ENCODER:bQuadDec:error\

		 Output nets:
			Net_243
			Net_244
			Net_246

	Local clock and reset nets:

======================================================
UDB 6
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_15\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_14\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_16\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_40\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\

	PLD 1:
		 Instances:
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_20\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_17\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_18\
			\ACC_ADC_A:AMuxHw_2_Decoder_one_hot_19\

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:AMuxHw_2_Decoder_is_active\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\
			!\ACC_ADC_A:AMuxHw_2_Decoder_old_id_2\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_3\ * !\ACC_ADC_A:AMuxHw_2_Decoder_old_id_5\ * \ACC_ADC_A:AMuxHw_2_Decoder_is_active\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_0\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_1\ * \ACC_ADC_A:AMuxHw_2_Decoder_old_id_4\

	Datapath:

	Control, status and sync:
		 Instances:
			\ACC_ADC_A:bSAR_SEQ:EOCSts\ : statuscell

		 Clock net: \ACC_ADC_A:clock\
		 Set/Reset net: 
		 Enable net: \ACC_ADC_A:bSAR_SEQ:enable\

		 Input nets:
			Net_261

		 Output nets:

	Local clock and reset nets:
			\ACC_ADC_A:bSAR_SEQ:enable\

======================================================
UDB 7
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_22\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_21\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_23\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_52\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\

	PLD 1:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_27\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_25\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_26\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_24\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\

	Datapath:

	Control, status and sync:
		 Instances:
			\ACC_B_ADC:bSAR_SEQ:EOCSts\ : statuscell

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: \ACC_B_ADC:bSAR_SEQ:enable\

		 Input nets:
			Net_364

		 Output nets:

	Local clock and reset nets:
			\ACC_B_ADC:bSAR_SEQ:enable\

======================================================
UDB 8
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_28\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_30\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_29\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_54\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\

	PLD 1:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_31\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_33\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_32\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_34\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\

	Datapath:

	Control, status and sync:
		 Instances:
			\ACC_ADC_A:Sync:genblk1[0]:INST\ : synccell
			\ACC_B_ADC:Sync:genblk1[0]:INST\ : synccell

		 Clock net: ClockBlock_BUS_CLK
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_ADC_A:nrq\
			\ACC_B_ADC:nrq\

		 Output nets:
			\ACC_ADC_A:Net_3935\
			\ACC_B_ADC:Net_3935\

	Local clock and reset nets:

======================================================
UDB 9
------------------------------------------------------
	PLD 0:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_37\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_35\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_36\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_47\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

	PLD 1:
		 Instances:
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_40\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_38\
			\ACC_B_ADC:AMuxHw_2_Decoder_one_hot_39\

		 Clock net: \ACC_B_ADC:clock\
		 Set/Reset net: 
		 Enable net: 

		 Input nets:
			\ACC_B_ADC:AMuxHw_2_Decoder_is_active\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\
			\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

		 Output nets:

		 Product terms:
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\
			!\ACC_B_ADC:AMuxHw_2_Decoder_old_id_3\ * !\ACC_B_ADC:AMuxHw_2_Decoder_old_id_4\ * \ACC_B_ADC:AMuxHw_2_Decoder_is_active\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_0\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_1\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_2\ * \ACC_B_ADC:AMuxHw_2_Decoder_old_id_5\

	Datapath:

	Control, status and sync:

	Local clock and reset nets:

E2055: An error occurred during placement of the design.
</CYPRESSTAG>
Error: plm.M0046: "C:\Program Files (x86)\Cypress\PSoC Creator\4.2\PSoC Creator\bin/sjplacer.exe" failed (0x0000000B)
Digital Placement phase: Elapsed time ==> 1s.756ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.289ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 6s.274ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 6s.274ms
Fitter phase: Elapsed time ==> 0s.000ms
Dependency generation phase: Elapsed time ==> 0s.031ms
Cleanup phase: Elapsed time ==> 0s.000ms
